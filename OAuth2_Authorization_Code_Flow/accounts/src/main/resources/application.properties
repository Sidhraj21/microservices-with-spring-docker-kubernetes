#properties for connecting to jdbc
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DATABASE_TO_LOWER=TRUE;DATABASE_TO_UPPER=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sid
spring.datasource.password=raj
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true

server.port=8080
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.defer-datasource-initialization=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=none

## prooerties for connecting to config seerver to access properties from it
spring.application.name=accounts
spring.profiles.active=dev
spring.config.import=optional:configserver:http://localhost:8071
#spring.config.import=configserver:http://localhost:8071

##properties for eureka server
eureka.instance.preferIpAddress=true
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
##below url is the same we mentioned in eurekaserver.properties file in configserver
eureka.client.serviceUrl.defaultZone=http://localhost:8070/eureka/

## additional properties for actuator endpoints
management.info.env.enabled=true
info.app.name=Accounts MicroService Bank Application
info.app.description=Application for Account Microservice in Bank App
info.app.version=1.0.0

endpopints.shutdown.enabled=true
management.endpoints.shutdown.enabled=true

##enabling all the actuators endpoints
management.endpoints.web.exposure.include=*

##adding circuit breaker properties
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.failureRateThreshold=50
resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.waitDurationInOpenState=30000
resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.permittedNumberOfCallsInHalfOpenState=2

##adding retry properties
resilience4j.retry.configs.default.registerHealthIndicator=true
resilience4j.retry.instances.detailsForCustomerSupportApp.maxRetryAttempts=3
resilience4j.retry.instances.detailsForCustomerSupportApp.waitDuration=2000

##adding properties for RateLimiter
resilience4j.ratelimiter.configs.default.registerHealthIndicator=true
resilience4j.retry.instances.sayHello.timeOutDuration=5000
resilience4j.retry.instances.sayHello.limitRefreshPeriod=5000
resilience4j.retry.instances.sayHello.limitForPeriod=1

##properties for zipkin sleuth
## how mauch logs to be pushed to zipkin1 == 100 %; 0.5=50%
spring.sleuth.sampler.percentage=1
spring.zipkin.baseUrl=http://localhost:9411

##properties to push sleuth messages to rabbit mq
#spring.zipkin.sender.type=rabbit
##zipkin is the queue name we created in rabbitmq
#spring.zipkin.rabbitmq.queue=zipkin 
#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest

## entry for creating a resource server to verify access token with keycloak
spring.security.oauth2.resourceserver.jwt.jwk-set-uri = http://localhost:7080/realms/master/protocol/openid-connect/certs

